<Activity mc:Ignorable="sap sap2010" x:Class="GetConfig" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property Name="out_StrConfigPath" Type="OutArgument(x:String)" />
    <x:Property Name="out_StrDesktopPath" Type="OutArgument(x:String)" />
    <x:Property Name="in_QueueCreateDate" Type="InArgument(x:String)" />
    <x:Property Name="in_ActiveCrossReference" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_ProductFamilyInfo" Type="InArgument(x:Boolean)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>704,1937.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="60">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="54">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetConfig" sap:VirtualizedContainerService.HintSize="614,1872.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strDesktopPath" />
      <Variable x:TypeArguments="x:String" Name="strFilePath">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">strDesktopPath+"\\Config.xlsx"</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)" Name="output" />
      <Variable x:TypeArguments="upr:ILocalResource" Name="result" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" sap:VirtualizedContainerService.HintSize="572,62.6666666666667" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_1" SpecialFolder="Desktop">
      <ui:GetEnvironmentFolder.FolderPath>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">strDesktopPath</mca:CSharpReference>
        </OutArgument>
      </ui:GetEnvironmentFolder.FolderPath>
    </ui:GetEnvironmentFolder>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="572,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">"user's desktop path: "+strDesktopPath</mca:CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ucas:DownloadStorageFile TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Download generic config file from orchestrator for customized use and save it on the user's desktop for easy access." DisplayName="Download Storage File" FolderPath="../CReST" sap:VirtualizedContainerService.HintSize="572,197.333333333333" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_2" Path="Config.xlsx" StorageBucketName="Config">
      <ucas:DownloadStorageFile.Destination>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">strDesktopPath+"\\Config_"+in_OrchestratorQueueName+"_"+DateTime.Now.ToString("yyyy-MM-dd")+".xlsx"</mca:CSharpValue>
        </InArgument>
      </ucas:DownloadStorageFile.Destination>
      <ucas:DownloadStorageFile.Result>
        <OutArgument x:TypeArguments="upr:ILocalResource">
          <mca:CSharpReference x:TypeArguments="upr:ILocalResource" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">result</mca:CSharpReference>
        </OutArgument>
      </ucas:DownloadStorageFile.Result>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ucas:DownloadStorageFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="572,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">result.LocalPath</mca:CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <Assign sap:VirtualizedContainerService.HintSize="572,62" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">out_StrConfigPath</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">result.LocalPath</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ueab:SequenceX DisplayName="Single Excel Process Scope" sap:VirtualizedContainerService.HintSize="572,1069.33333333333" sap2010:WorkflowViewState.IdRef="SequenceX_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="510,957.333333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" TemplatePath="Data\\Config.xlsx" UseTemplate="True">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,658" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WriteCellX_1">
                <ueab:WriteCellX.Cell>
                  <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                    <mca:CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">Excel.Sheet["Settings"].Cell["B2"]</mca:CSharpValue>
                  </InArgument>
                </ueab:WriteCellX.Cell>
                <ueab:WriteCellX.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">in_OrchestratorQueueName</mca:CSharpValue>
                  </InArgument>
                </ueab:WriteCellX.Value>
              </ueab:WriteCellX>
              <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WriteCellX_2">
                <ueab:WriteCellX.Cell>
                  <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                    <mca:CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">Excel.Sheet["Constants"].Cell["B18"]</mca:CSharpValue>
                  </InArgument>
                </ueab:WriteCellX.Cell>
                <ueab:WriteCellX.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">in_ActiveCrossReference</mca:CSharpValue>
                  </InArgument>
                </ueab:WriteCellX.Value>
              </ueab:WriteCellX>
              <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WriteCellX_3">
                <ueab:WriteCellX.Cell>
                  <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                    <mca:CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">Excel.Sheet["Constants"].Cell["B19"]</mca:CSharpValue>
                  </InArgument>
                </ueab:WriteCellX.Cell>
                <ueab:WriteCellX.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">in_ProductFamilyInfo</mca:CSharpValue>
                  </InArgument>
                </ueab:WriteCellX.Value>
              </ueab:WriteCellX>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
        <ueab:ExcelApplicationCard.WorkbookPath>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">out_StrConfigPath</mca:CSharpValue>
          </InArgument>
        </ueab:ExcelApplicationCard.WorkbookPath>
      </ueab:ExcelApplicationCard>
    </ueab:SequenceX>
  </Sequence>
</Activity>